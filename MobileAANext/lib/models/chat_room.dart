// lib/models/chat_room.dart

enum MessageType { text, news_share }

class ChatMessage {
  final String id;
  final String senderId;
  final String senderName;
  final DateTime timestamp;
  final MessageType type;
  
  // Text message
  final String? text;
  
  // News share
  final String? newsId;
  final String? newsTitle;
  final String? newsImageUrl;
  final String? emoji;
  final bool includeDetail;
  final String? autoGeneratedText; // AI üretimi

  ChatMessage({
    required this.id,
    required this.senderId,
    required this.senderName,
    required this.timestamp,
    required this.type,
    this.text,
    this.newsId,
    this.newsTitle,
    this.newsImageUrl,
    this.emoji,
    this.includeDetail = false,
    this.autoGeneratedText,
  });

  Map<String, dynamic> toJson() => {
        'id': id,
        'senderId': senderId,
        'senderName': senderName,
        'timestamp': timestamp.toIso8601String(),
        'type': type.toString(),
        'text': text,
        'newsId': newsId,
        'newsTitle': newsTitle,
        'newsImageUrl': newsImageUrl,
        'emoji': emoji,
        'includeDetail': includeDetail,
        'autoGeneratedText': autoGeneratedText,
      };

  factory ChatMessage.fromJson(Map<String, dynamic> json) => ChatMessage(
        id: json['id'],
        senderId: json['senderId'],
        senderName: json['senderName'],
        timestamp: DateTime.parse(json['timestamp']),
        type: MessageType.values.firstWhere(
          (e) => e.toString() == json['type'],
        ),
        text: json['text'],
        newsId: json['newsId'],
        newsTitle: json['newsTitle'],
        newsImageUrl: json['newsImageUrl'],
        emoji: json['emoji'],
        includeDetail: json['includeDetail'] ?? false,
        autoGeneratedText: json['autoGeneratedText'],
      );

  // AI mesaj üretimi
  static String generateShareMessage(String emoji, String newsTitle, bool includeDetail) {
    String message = '';
    
    switch (emoji) {
      case '❤️':
        message = 'Muhteşem haber! $newsTitle';
        break;
      case '😮':
        message = 'Vay be! Bu haberi görün: $newsTitle';
        break;
      case '🔥':
        message = 'Çok gündemde bu! $newsTitle';
        break;
      case '👍':
        message = 'Güzel gelişme: $newsTitle';
        break;
      case '😂':
        message = 'Bu çok eğlenceli! $newsTitle';
        break;
      case '😢':
        message = 'Üzücü bir haber: $newsTitle';
        break;
      default:
        message = 'Bu haberi paylaşıyorum: $newsTitle';
    }

    if (includeDetail) {
      message += '\n\n📰 Detaylar için habere tıklayın!';
    }

    return message;
  }
}

class ChatRoom {
  final String id;
  final String name;
  final String emoji;
  final List<String> memberIds;
  final List<ChatMessage> messages;
  final DateTime? lastMessageAt;

  ChatRoom({
    required this.id,
    required this.name,
    required this.emoji,
    required this.memberIds,
    required this.messages,
    this.lastMessageAt,
  });

  String get lastMessagePreview {
    if (messages.isEmpty) return 'Henüz mesaj yok';
    final last = messages.last;
    if (last.type == MessageType.news_share) {
      return '${last.emoji ?? '📰'} Haber paylaştı';
    }
    return last.text ?? '';
  }

  Map<String, dynamic> toJson() => {
        'id': id,
        'name': name,
        'emoji': emoji,
        'memberIds': memberIds,
        'messages': messages.map((m) => m.toJson()).toList(),
        'lastMessageAt': lastMessageAt?.toIso8601String(),
      };

  factory ChatRoom.fromJson(Map<String, dynamic> json) => ChatRoom(
        id: json['id'],
        name: json['name'],
        emoji: json['emoji'],
        memberIds: List<String>.from(json['memberIds']),
        messages: (json['messages'] as List)
            .map((m) => ChatMessage.fromJson(m))
            .toList(),
        lastMessageAt: json['lastMessageAt'] != null
            ? DateTime.parse(json['lastMessageAt'])
            : null,
      );

  // Mock data generator
  static List<ChatRoom> getMockRooms() {
    final now = DateTime.now();
    
    return [
      ChatRoom(
        id: 'room_1',
        name: 'Arkadaşlar',
        emoji: '🎉',
        memberIds: ['friend_1', 'friend_2', 'friend_4'],
        lastMessageAt: now.subtract(const Duration(minutes: 5)),
        messages: [
          ChatMessage(
            id: 'msg_1',
            senderId: 'friend_1',
            senderName: 'Ahmet',
            timestamp: now.subtract(const Duration(hours: 2)),
            type: MessageType.text,
            text: 'Selam! Nasılsınız?',
          ),
          ChatMessage(
            id: 'msg_2',
            senderId: 'friend_2',
            senderName: 'Ayşe',
            timestamp: now.subtract(const Duration(hours: 1)),
            type: MessageType.news_share,
            newsId: 'reel_1',
            newsTitle: 'Dolar rekor kırdı',
            newsImageUrl: 'https://picsum.photos/200',
            emoji: '😮',
            includeDetail: true,
            autoGeneratedText: ChatMessage.generateShareMessage(
              '😮',
              'Dolar rekor kırdı',
              true,
            ),
          ),
          ChatMessage(
            id: 'msg_3',
            senderId: 'friend_4',
            senderName: 'Zeynep',
            timestamp: now.subtract(const Duration(minutes: 5)),
            type: MessageType.text,
            text: 'Vay be gerçekten mi? 😱',
          ),
        ],
      ),
      ChatRoom(
        id: 'room_2',
        name: 'Gündem Takipçileri',
        emoji: '📰',
        memberIds: ['friend_1', 'friend_3', 'friend_5'],
        lastMessageAt: now.subtract(const Duration(hours: 3)),
        messages: [
          ChatMessage(
            id: 'msg_4',
            senderId: 'friend_3',
            senderName: 'Mehmet',
            timestamp: now.subtract(const Duration(hours: 3)),
            type: MessageType.news_share,
            newsId: 'reel_2',
            newsTitle: 'Merkez Bankası faiz kararı',
            newsImageUrl: 'https://picsum.photos/201',
            emoji: '🔥',
            includeDetail: false,
            autoGeneratedText: ChatMessage.generateShareMessage(
              '🔥',
              'Merkez Bankası faiz kararı',
              false,
            ),
          ),
        ],
      ),
    ];
  }
}